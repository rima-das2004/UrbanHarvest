<% layout('layouts/supplierBoilerplate') -%>


<body >
    

    <div class="container py-5">

         
<% for( let c of  categorySelection ) { %>
    <h2 class="category-header mb-4 p-3 bg-success text-white rounded">
        <i class="fas fa-carrot me-2"></i><%= c %> Inventory
    </h2> 
    <div class="row g-4">
    <% for( let product of products) { %>
        <% if (c==product.category) { %>
            <div class="col-md-3">
                <div class="card item-card h-100">
                    <img src="<%= product.image[0].url %>" 
                         class="vegetable-img" 
                         alt="Potatoes">
                    <div class="card-body">
                        <h5 class="card-title text-primary" style="color: #d8363a !important;"><i class="fas fa-seedling me-2"></i><%= product.name %></h5>
                        <p>Price: <%= product.price %> per <%= product.unit %></p>
                        <div class="d-flex justify-content-between align-items-center mb-3">
                            <span class="badge bg-success"  style="background:#67a617 !important">In Stock</span>
                            <h6 class="mb-0" id="potato-stock"><%= product.quantity %> <%= product.unit %></h6>
                        </div>
                        <div class="progress mb-3">
                            <div class="progress-bar bg-warning" 
                                 role="progressbar" 
                                 style="width: <%= (product.quantity/100)*100 %>%"
                                 aria-valuenow="<%= product.quantity %>" 
                                 aria-valuemin="0" 
                                 aria-valuemax="100">
                               <%= (product.quantity/100)*100 %>  %

                            </div>
                        </div>
                        <button class="btn btn-outline-primary w-100 toggle-edit updateStockPrev">
                            <i class="fas fa-edit me-2"></i>Update Stock
                        </button>
                    </div>
                    <div class="edit-form" style="padding: 0rem 1rem 1rem 1rem;">
                        <form action="/supplier/<%= username %>/updateStock/<%= product._id %>?_method=put" method="post" novalidate class="needs-validation">
                        <div class="input-group d-flex" style="flex-direction:coloumn; gap:2px;">
                            <input type="number" class="form-control w-100" 
                                   placeholder="New quantity (<%= product.unit %>)"
                                   data-target="potato" name="product[quantity]" reuired>

                           <br>
                                   <input type="number" class="form-control w-100" 
                                   placeholder="New price"
                                   data-target="potato" name="product[price]" required>
                                 
                            <button type="submit" class="btn btn-success mt-2"  style="background:#67a617 !important" onclick="updateStock('potato')">
                                <i class="fas fa-check"></i> UPDATE
                            </button>

                        </div>
                    </form>
                    <form action="/supplier/<%= username %>/updateStock/<%= product._id %>?_method=delete" method="post">
                        <button type="submit" class="btn btn-danger mt-2"  style="background:#d8363a!important; border-top-left-radius:0;border-bottom-left-radius:0;" onclick="updateStock('potato')">
                            <i class="fas fa-trash-o"></i> DELETE 
                        </button>
                    </form>
                    </div>
                </div>
            </div>
    
        <% } %>
    <% } %>
</div>
<% } %>

        


           
            <div class="col-md-4">
                <div class="card item-card h-100 add-item-card">
                    <div class="card-body d-flex flex-column justify-content-center align-items-center">
                        <form action="/supplier/<%= username %>/addProduct" method="get">
                        <button type="submit" class="btn btn-success rounded-circle p-0 add-item-btn" 
                                onclick="addNewItem()"
                                data-bs-toggle="tooltip" 
                                title="Add new stock item">
                            <div class="add-item-inner">
                                <i class="fas fa-plus fa-2x"></i>
                            </div>
                        </button>
                    </form>
                        <h5 class="mt-3 text-muted">Add New Item</h5>
                    </div>
                </div>
            </div>
        </div>
    </div>

    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/js/bootstrap.bundle.min.js"></script>
    <script>
        

        // Initialize progress bars
        function updateProgressBar(item) {
            const progressBar = document.querySelector(`#${item}-stock`)
                .closest('.card-body')
                .querySelector('.progress-bar');
            
            const current = parseInt(progressBar.getAttribute('aria-valuenow'));
            const max = parseInt(progressBar.getAttribute('aria-valuemax'));
            const percentage = Math.round((current / max) * 100);

            progressBar.style.width = `${percentage}%`;
            progressBar.textContent = `${percentage}%`;
        }

        // Update stock function
        function updateStock(item) {
            const input = document.querySelector(`input[data-target="${item}"]`);
            const stockElement = document.getElementById(`${item}-stock`);
            const progressBar = stockElement.closest('.card-body')
                                .querySelector('.progress-bar');
            
            const newValue = parseInt(input.value);
            if (!isNaN(newValue)) {
                // Update stock display
                stockElement.textContent = `${newValue} kg`;
                
                // Update progress bar
                const max = parseInt(progressBar.getAttribute('aria-valuemax'));
                const percentage = Math.round((newValue / max) * 100);
                
                progressBar.setAttribute('aria-valuenow', newValue);
                progressBar.style.width = `${percentage}%`;
                progressBar.textContent = `${percentage}%`;
            }
        }

        // Initialize all progress bars on load
        document.addEventListener('DOMContentLoaded', () => {
            updateProgressBar('potato');
            updateProgressBar('tomato');
            updateProgressBar('gourd');
        });

        // Toggle edit form
        document.querySelectorAll('.toggle-edit').forEach(button => {
            button.addEventListener('click', function() {
                const card = this.closest('.card');
                const form = card.querySelector('.edit-form');
                form.classList.toggle('active');

                
                
                const isActive = form.classList.contains('active');
                this.innerHTML = isActive ? 
                    '<i class="fas fa-times me-2"></i>Close Editor' : 
                    '<i class="fas fa-edit me-2"></i>Update Stock';
                    
                  
                });
                
        });
       


        // Add more button js code
        function addNewItem() {
            // Your logic to handle new item addition
            console.log('Add new item clicked!');
            // You can add your item creation logic here
        }




    </script>
</body>
</html>